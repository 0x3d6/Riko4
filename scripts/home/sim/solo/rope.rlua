local gpp = require("gpp")
local vec = dofile("../lib/vector.lua")

local rope = {
  {50, 45, fixed = true},
  {100, 45},
  {150, 45},
  {200, 45},
  {250, 45},
  {300, 45},
}

for i = 1, 15 do
rope[i] = rope[i] or {}
  rope[i][1] = 100 + i * 3 --rope[i][1] + 100
  rope[i][2] = 45

  rope[i].vx = 0
  rope[i].vy = 0
end

local sk = 500
local xd = 3
local g = 100
local fr = 0.99

function _draw()
  cls()

  for i = 1, #rope do
    local r = rope[i]

    if i ~= #rope then
      local r2 = rope[i + 1]
      gpp.drawLine(r[1], r[2], r2[1], r2[2], 12)
    end

    pix(r[1], r[2], 8)
  end

  swap()
end

local function applyForce(pc, nb)
  local seg = vec(nb[1] - pc[1], nb[2] - pc[2])
  local xf = seg:norm() - xd
  pc.f:add(seg:normalize():times(sk * xf))
end

function _update(dt)
  for i = 1, #rope do
    local r = rope[i]
    r.f = vec(0, 0)

    if not r.fixed then
      if i > 1 then
        applyForce(r, rope[i - 1])
      end

      if i < #rope then
        applyForce(r, rope[i + 1])
      end

      r.f.y = r.f.y + g
    end
  end

  for i = 1, #rope do
    local r = rope[i]
    r.vx = r.vx + r.f.x * dt
    r.vy = r.vy + r.f.y * dt

    r[1] = r[1] + r.vx * dt
    r[2] = r[2] + r.vy * dt

    r.vx = r.vx * fr
    r.vy = r.vy * fr
  end
end
